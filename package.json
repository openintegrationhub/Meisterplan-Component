{
    "version": "1.2.0",
    "main": "component.json",
    "dependencies": {
        "@openintegrationhub/ferryman": "2.1.0",
        "swagger-client": "^3.8.22",
        "dayjs": "^1.10.7"
    },
    "devDependencies": {
        "eslint": "8.8.0",
        "eslint-config-airbnb-base": "15.0.0",
        "eslint-plugin-import": "2.25.4",
        "eslint-plugin-jest": "22.1.0",
        "eslint-plugin-json": "1.4.0",
        "eslint-plugin-mocha": "5.2.0"
    },
    "author": {
        "name": "Open Integration Hub"
    },
    "license": "Apache-2.0",
    "name": "meisterplan-component",
    "description": "# Introduction\n\nThe Meisterplan API provides machine-readable access to a Meisterplan system via an HTTP-based JSON REST interface.\nThis page will show you how to [get started](#section/Get-Started), and how you can [use the API to interact with your Meisterplan system](#section/General-Information).\n\n## Want to load data into external BI tools?\nCreate reports using the [Reporting API](https://help.meisterplan.com/hc/en-us/articles/360013641220), which provides data optimized for reporting.\n\n## Versioning and Changes\n\nWe will continuously expand this API's functionality and add bug fixes (see the changelog [here](https://help.meisterplan.com/hc/en-us/articles/360024302652-Meisterplan-REST-API-Changelog)).\nFor best results, make sure your code can handle new JSON properties and does not depend on the order in which JSON objects are returned by the API, unless explicitly stated here.\n\n## Support\n\nIf you have any questions, email us at [support@meisterplan.com](mailto:support@meisterplan.com) - we're happy to help!\n\n[API Changelog](https://help.meisterplan.com/hc/en-us/articles/360024302652-Meisterplan-REST-API-Changelog)\n\n[Meisterplan Help Center](https://help.meisterplan.com/)\n\n[Meisterplan Terms of Service](https://meisterplan.com/terms-of-service/)\n\n# Authentication\n\nYou will need a [Meisterplan system](#section/Get-Started/Meisterplan-System) and an [API Token](#section/Authentication/API-Token) for your\n user.\nYou can then proceed to look at the [examples](#section/Get-Started).\nPlease also take a look at the [general information](#section/General-Information) which will give you an overview of how the API works.\n\n## API Token\n\nYou can generate API tokens via the Meisterplan user interface.\nPlease take a look at the [help center](https://help.meisterplan.com/hc/en-us/articles/360028700752-REST-API-Manage-API-Tokens) how to generate API tokens.\nYour token will look like this: `api-48eba51e5a8d43ed8a8daeba585b7093`.\nNote that the letters `api-` are part of the token.\nWith this token, you can start building your integration.\nIf you need more help, see [this page](https://help.meisterplan.com/hc/en-us/articles/360028700752-Manage-REST-API-Tokens).\n\n# Get Started\n\nThe following examples will use [cURL](https://curl.haxx.se/) to show you how to use the API from the command line.\n\n## Meisterplan System\n\nStart by getting an API token from your Meisterplan system (free trials available at [meisterplan.com/trial](https://meisterplan.com/trial/)).\nThe API URL of your Meisterplan system will depend on your region, either `https://api.us.meisterplan.com/v1/` for\n the US or `https://api.eu.meisterplan.com/v1` for the EU.\nYou do not have to specify your system name in the URL, as it is already encoded in the [API token](#section/Get-Started/API-Token).\n\nLet's assume you have a [Meisterplan system](#section/Get-Started/Meisterplan-System) in the US and the [API token](#section/Get-Started/API-Token) `api-xxx`.\n\n## Headers\n\nTo perform your own requests against the API, you must provide an `Authorization` header on every HTTP request.\n\n```\nAuthorization: \"api-xxx\"\n```\n\nAn HTTP status code 401 will be returned if you are not authorized to access the API.\n\nAdditionally, all `PATCH` and `POST` requests require you to specify the accepted MIME type with the following header:\n```\nContent-Type: application/json\n```\n\nRequests without a `User-Agent` will be rejected with HTTP status code 403. Note that in this case an HTML error page will be returned as opposed to a JSON\nresponse. Most tools provide a user-agent on their own. If this is not the case, please provide one in the following form:\n\n```\nUser-Agent: \"<product> / <product-version> <comment>\"\n```\n\n## Resources\n\n**Please note**: The following examples assume you're running an [`sh`-compatible](https://en.wikipedia.org/wiki/Bourne_shell) shell or `cmd.exe` and have access to the [`curl`](https://curl.haxx.se/) command. Using `curl` in [MicroSoft PowerShell](https://docs.microsoft.com/en-us/powershell/) will **not** trigger the `curl` command, but will instead call [`Invoke-RestMethod`](https://docs.microsoft.com/en-us/powershell/module/Microsoft.PowerShell.Utility/Invoke-RestMethod?view=powershell-5.1), which has an incompatible command argument syntax. Using `curl` is not a necessary prerequisite to using the Meisterplan REST API, and you are free to use any tool that suits your requirements.\n\nThe following call will [create a new resource](#operation/createResourceUsingPOST) in your Meisterplan instance:\n\n`sh`-compatible shell:\n```\ncurl -s \"https://api.us.meisterplan.com/v1/resources\" \\\n  -H \"Authorization: api-xxx\" \\\n  -H \"Content-Type: application/json\" \\\n  --data \"{ \\\"lastName\\\": \\\"Stine\\\", \\\"firstName\\\": \\\"Brandon\\\" }\"\n```\n\nWindows Console (`cmd.exe`):\n```\ncurl -s \"https://api.us.meisterplan.com/v1/resources\" ^\n  -H \"Authorization: api-xxx\" ^\n  -H \"Content-Type: application/json\" ^\n  --data \"{ \\\"lastName\\\": \\\"Stine\\\", \\\"firstName\\\": \\\"Brandon\\\" }\"\n```\n\nThe answer will look similar to the following (the internal and external IDs will be different for your response):\n\n```\n{\n  \"id\" : \"50703a7a-9285-4ffe-9e29-47187c454ade\",\n  \"firstName\" : \"Brandon\",\n  \"lastName\" : \"Stine\",\n  \"externalId\" : \"96bb0fbc-a7e0-4ee3-b456-dbf390960268\",\n  // … more fields\n}\n```\n\nYou can [retrieve your new resouce](#operation/getResourceByIdUsingGET) using its ID:\n\n`sh`-compatible shell:\n```\ncurl -s \"https://api.us.meisterplan.com/v1/resources/50703a7a-9285-4ffe-9e29-47187c454ade\" \\\n  -H \"Authorization: api-xxx\"\n```\n\nWindows Console (`cmd.exe`):\n```\ncurl -s \"https://api.us.meisterplan.com/v1/resources/50703a7a-9285-4ffe-9e29-47187c454ade\" ^\n  -H \"Authorization: api-xxx\"\n```\n\nYou can [update a resource](#operation/updateResourceUsingPATCH) using the `PATCH` method. Let's give Brandon an email address:\n\n`sh`-compatible shell:\n```\ncurl -s \"https://api.us.meisterplan.com/v1/resources/50703a7a-9285-4ffe-9e29-47187c454ade\" \\\n  -H \"Authorization: api-xxx\" \\\n  -H \"Content-Type: application/json\" \\\n  --data \"{ \\\"emailAddress\\\": \\\"brandon.stines@example.com\\\" }\" \\\n  -X PATCH\n```\n\nWindows Console (`cmd.exe`):\n```\ncurl -s \"https://api.us.meisterplan.com/v1/resources/50703a7a-9285-4ffe-9e29-47187c454ade\" ^\n  -H \"Authorization: api-xxx\" ^\n  -H \"Content-Type: application/json\" ^\n  --data \"{ \\\"emailAddress\\\": \\\"brandon.stines@example.com\\\" }\" ^\n  -X PATCH\n```\n\nYou will notice that the email field in the response is now set to the new email address:\n\n```\n{\n  \"id\" : \"50703a7a-9285-4ffe-9e29-47187c454ade\",\n  \"firstName\" : \"Brandon\",\n  \"lastName\" : \"Stine\",\n  \"emailAddress\" : \"brandon.stines@example.com\",\n  // …\n}\n```\n\nYou can also [list all available resources](#operation/getAllResourcesUsingGET) by omitting the ID:\n\n`sh`-compatible shell:\n```\ncurl -s \"https://api.us.meisterplan.com/v1/resources\" \\\n  -H \"Authorization: api-xxx\"\n```\n\nWindows Console (`cmd.exe`):\n```\ncurl -s \"https://api.us.meisterplan.com/v1/resources\" ^\n  -H \"Authorization: api-xxx\"\n```\n\nThe answer will look like this:\n\n```\n{\n  \"items\": [\n    // …all resources\n  ]\n  \"_pagination\": {\n    \"after\": {\n      \"cursor\": \"ZjkyYjU1MDItNTAwYi00Yzg1LWEwOGItMzllZWU1NWE4ZTlk\"\n    }\n  }\n}\n```\n\nThe resource endpoint is [paginated](#section/General-Information/Pagination).\nLet's get some more resources:\n\n`sh`-compatible shell:\n```\ncurl -s \"https://api.us.meisterplan.com/v1/resources?pageSize=16&pageAfter=MDAzNWQ5MDctOTZkNi00MzdjLWE4MmUtMzNiZDBjNjdiNmM1\" \\\n  -H \"Authorization: api-xxx\"\n```\n\nWindows Console (`cmd.exe`):\n```\ncurl -s \"https://api.us.meisterplan.com/v1/resources?pageSize=16&pageAfter=MDAzNWQ5MDctOTZkNi00MzdjLWE4MmUtMzNiZDBjNjdiNmM1\" ^\n  -H \"Authorization: api-xxx\"\n```\n\nIf no more resources are available in your system, the request will return an empty list.\n\n## Projects and Scenarios\n\n[Projects](#tag/Projects) are linked to their [scenarios](#tag/Scenarios) in Meisterplan.\nYou can only address projects through their scenario ID.\nYou can query Meisterplan for [all scenarios](#operation/getAllScenariosUsingGET):\n\n`sh`-compatible shell:\n```\ncurl -s \"https://api.us.meisterplan.com/v1/scenarios\" \\\n  -H \"Authorization: api-xxx\"\n```\n\nWindows Console (`cmd.exe`):\n```\ncurl -s \"https://api.us.meisterplan.com/v1/scenarios\" ^\n  -H \"Authorization: api-xxx\"\n```\n\nThe answer will look like this:\n\n```\n{\n  \"items\" : [ {\n    \"id\" : \"2b45a678-8bd3-4e5e-acd9-1e817b530204\",\n    \"name\" : \"Proposed Portfolio going forward\"\n  }, {\n    \"id\" : \"7a36777f-00d7-dd0b-2468-95aa94f90e63\",\n    \"name\" : \"Plan of Record\"\n  } ]\n}\n```\n\nYou can then use a scenario's ID to retrieve a project.\nNote that the special scenario *Plan of Record* always exists.\nYou can use it in the URL instead of using its ID.\nLet's [retrieve all projects](#operation/getAllProjects-AMtyOPcUsingGET) in the *Plan of Record*:\n\n`sh`-compatible shell:\n```\ncurl -s \"https://api.us.meisterplan.com/v1/scenarios/PlanOfRecord/projects\" \\\n  -H \"Authorization: api-xxx\"\n```\n\nWindows Console (`cmd.exe`):\n```\ncurl -s \"https://api.us.meisterplan.com/v1/scenarios/PlanOfRecord/projects\" ^\n  -H \"Authorization: api-xxx\"\n```\n\n\nYou can also create new projects and edit existing ones just like you can resources.\nLet's [create a new project](#operation/createProject-QWGM0WIUsingPOST) in the *Plan of Record* with Brandon as its project manager:\n\n`sh`-compatible shell:\n```\ncurl -s \"https://api.us.meisterplan.com/v1/scenarios/PlanOfRecord/projects\" \\\n  -H \"Authorization: api-xxx\" \\\n  -H \"Content-Type: application/json\" \\\n  --data \"{ \\\"name\\\": \\\"Company-wide roll-out of Meisterplan\\\", \\\"start\\\": \\\"2020-01-31\\\", \\\"finish\\\": \\\"2020-02-14\\\", \\\"manager\\\": { \\\"id\\\": \\\"50703a7a-9285-4ffe-9e29-47187c454ade\\\" } }\"\n```\n\nWindows Console (`cmd.exe`):\n```\ncurl -s \"https://api.us.meisterplan.com/v1/scenarios/PlanOfRecord/projects\" ^\n  -H \"Authorization: api-xxx\" ^\n  -H \"Content-Type: application/json\" ^\n  --data \"{ \\\"name\\\": \\\"Company-wide roll-out of Meisterplan\\\", \\\"start\\\": \\\"2020-01-31\\\", \\\"finish\\\": \\\"2020-02-14\\\", \\\"manager\\\": { \\\"id\\\": \\\"50703a7a-9285-4ffe-9e29-47187c454ade\\\" } }\"\n```\n\nNotice how we've provided Brandon's *internal ID* to link him to the new project as its project manager.\n\n# General Information\n\n## HTTP Methods\n\nThe Meisterplan API recognizes the HTTP methods: `POST`, `GET`, and `PATCH` and `DELETE`.\nThey correspond to the _create_, _read_, _update_ and _delete_ operations.\nThe endpoints for creating and updating an entity will always respond with the newly created or updated entity in their response payload.\nIf successful, `POST` endpoints will respond with HTTP status code `201` and `PATCH` with endpoints with `200`.\nDeleting an entity will result in no body and an HTTP status code `204`, if successful.\n\n### HTTP Method Override\n\nIf your firewall does not permit certain HTTP methods from being executed, you may override the HTTP request method with the `X-HTTP-Method-Override` header. The following request:\n\n    POST /v1/resources/123 HTTP/1.1\n    X-HTTP-Method-Override: PATCH\n\nwill be interpreted as a `PATCH` request against the resource with the id `123` by the server.\n\n## IDs\n\nAll entities carry an internal Meisterplan ID in the JSON property `id`, which can be used for reference in other requests, or for updates and deletions.\nAdditionally, Meisterplan allows you to set a **unique** `externalId` for some entities.\nThe `externalId` can be used to cross-reference a Meisterplan entity with your own system.\nThe `externalId` is never used by Meisterplan.\n\n## Pagination\n\nSome endpoints return paginated data.\nIn order to access the next page, an opaque cursor is provided in the response to your `GET` request, which can be passed as a query parameter `pageAfter` on a subsequent request.\nYou can control the page size with the `pageSize` query parameter.\nThe following URL will return 16 items following the given opaque cursor:\n\n```\nhttps://api.us.meisterplan.com/v1/resources?pageSize=16&pageAfter=MDAzNWQ5MDctOTZkNi00MzdjLWE4MmUtMzNiZDBjNjdiNmM1\n```\n\n## Filtering\n\nIn order to find a certain entity, all paginated endpoints allow for filtering using the `filter` query parameter.\nThe filter will look for entities matching _all_ of the provided values _exactly_.\nAll properties of the filter object are optional.\nAn empty filter results in all entities being returned.\nFilter values of `null` are ignored.\nThe following URL will retrieve all resources with the external id `brandon.s`:\n\n```\nhttps://api.us.meisterplan.com/v1/resources?filter={\"externalId\":\"brandon.s\"}\n```\n\nNote that depending on your environment, you may need to URL-Encode the filter:\n\n```\nhttps://api.us.meisterplan.com/v1/resources?filter=%7B%22externalId%22%3A%22brandon.s%22%7D\n```\n\nNot all fields can be used in a filter.\nTo see which fields are available, refer to the endpoint's documentation.\nLook for the `filter` query parameter and the example model, which lists all available fields.\n\n## Updating Fields\n\nFields of existing entities can be updated via HTTP `PATCH`. In order to delete a field’s content, or replace it with its default value, if any, set the field to `null`. Only the specified fields will be changed. Fields not specified in the `PATCH` body will not be affected.\n\nNested objects **are not** deleted recursively by setting their parent property to `null`. Delete the respective sub-fields by individually setting them to `null`. Fields whose values are objects with only **one** property (such as a resource’s `calendar` or `primaryRole` whose only sub-field is `path` and `id`, respectively) **are the exception**. You can delete a resource’s association with a given calendar or primary role by setting `{ \"calendar\": null }` or `{ \"primaryRole\": null }`.\n\n## Error Handling\n\nThe error messages generated by the Meisterplan API follow the [JSON API specification](https://jsonapi.org/examples/#error-objects) on error objects.\nIf your request was not valid, HTTP status code 400 will be returned, along with a JSON object detailing the cause of the error.\n\nIf you did not have sufficient permissions to perform the request (e.g. attempting to access a field for which you have no permission), HTTP status code 403 will be returned.\n\n## Dates\n\n### Format\nThe Meisterplan API uses the [ISO8601 date format](https://www.iso.org/iso-8601-date-and-time-format.html) for all dates:\n\n`YYYY-MM-DD`\n\nFor example, September 27, 2020 is represented as `2020-09-27`.\n\nThe earliest possible date is `1970-01-01`. The latest possible date is `2079-07-02`.\n\n### Time Periods\nStart dates of time periods are interpreted as the beginning of a day.\nFor example, `2020-09-27` will be interpreted as September 27, 2020 at 12:00am.\n\nFinish dates of time periods are interpreted as the end of a day.\nFor example, `2020-09-27` will be interpreted as September 27, 2020 at 11:59pm.\n\n## Rate Limiting\n\nIn order to prevent outages and to make sure the API is fast for everyone, the Meisterplan API will rate limit requests.\nThe API allows for at least 300 requests per minute, per user.\nPlease ensure you do not call the API with multiple concurrent requests, as some requests cannot be performed in parallel.\nIf you have exceeded the rate limit, an HTTP status code 429 will be returned.\nIf you happen to be rate-limited, we recommend you use [exponential backoff](https://en.wikipedia.org/wiki/Exponential_backoff) method for retries.\nWe reserve the right to change these guidelines to ensure the API's availability.\n",
    "scripts": {
        "start": "node ./node_modules/@openintegrationhub/ferryman/runGlobal.js",
        "pretest": "eslint lib test --ext .js --ext .json --fix",
        "test": "NODE_ENV=test mocha test/* --timeout 10000",
        "test-watch": "nodemon --exec \"npm test \" ",
        "lint": "eslint --fix 'lib/**/*.js'"
    }
}